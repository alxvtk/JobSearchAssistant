// <auto-generated />
using System;
using JsaCqrsApi.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace JsaCqrsApi.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("JsaCqrsApi.Domain.Models.Business", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name")
                        .HasColumnType("varchar(1024)")
                        .HasMaxLength(1024)
                        .IsUnicode(false);

                    b.HasKey("Id")
                        .HasName("PK__b_Id");

                    b.ToTable("Business");
                });

            modelBuilder.Entity("JsaCqrsApi.Domain.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("Id")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnName("Code")
                        .HasColumnType("varchar(3)")
                        .HasMaxLength(3)
                        .IsUnicode(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name")
                        .HasColumnType("varchar(128)")
                        .HasMaxLength(128)
                        .IsUnicode(false);

                    b.HasKey("Id")
                        .HasName("PK__c_Id");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("JsaCqrsApi.Domain.Models.DocFormat", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("Id")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnName("Type")
                        .HasColumnType("varchar(4)")
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.HasKey("Id")
                        .HasName("PK__df_Id");

                    b.ToTable("DocFormat");
                });

            modelBuilder.Entity("JsaCqrsApi.Domain.Models.Document", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("Id")
                        .HasColumnType("int");

                    b.Property<string>("Body")
                        .HasColumnName("Body")
                        .HasColumnType("varchar(8000)")
                        .HasMaxLength(8000)
                        .IsUnicode(false);

                    b.Property<int?>("DocFormatId")
                        .HasColumnName("DocFormatId")
                        .HasColumnType("int");

                    b.Property<int?>("EmailId")
                        .HasColumnName("EmailId")
                        .HasColumnType("int");

                    b.Property<string>("FullPath")
                        .HasColumnName("FullPath")
                        .HasColumnType("varchar(260)")
                        .HasMaxLength(260)
                        .IsUnicode(false);

                    b.Property<int?>("UrLinklId")
                        .HasColumnName("UrlId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__d_Id");

                    b.HasIndex("DocFormatId");

                    b.HasIndex("EmailId");

                    b.HasIndex("UrLinklId");

                    b.ToTable("Document");
                });

            modelBuilder.Entity("JsaCqrsApi.Domain.Models.Email", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("Id")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnName("Address")
                        .HasColumnType("varchar(320)")
                        .HasMaxLength(320)
                        .IsUnicode(false);

                    b.Property<string>("Comment")
                        .HasColumnName("Comment")
                        .HasColumnType("varchar(1024)")
                        .HasMaxLength(1024)
                        .IsUnicode(false);

                    b.HasKey("Id")
                        .HasName("PK__e_Id");

                    b.ToTable("Email");
                });

            modelBuilder.Entity("JsaCqrsApi.Domain.Models.Email2Business", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("Id")
                        .HasColumnType("int");

                    b.Property<string>("Active")
                        .IsRequired()
                        .HasColumnName("Active")
                        .HasColumnType("varchar(1)")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<int>("BusinessId")
                        .HasColumnName("BusinessId")
                        .HasColumnType("int");

                    b.Property<int>("EmailId")
                        .HasColumnName("EmailId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__e2b_Id");

                    b.HasIndex("BusinessId");

                    b.HasIndex("EmailId");

                    b.ToTable("Email2Business");
                });

            modelBuilder.Entity("JsaCqrsApi.Domain.Models.Email2Person", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("Id")
                        .HasColumnType("int");

                    b.Property<string>("Active")
                        .IsRequired()
                        .HasColumnName("Active")
                        .HasColumnType("varchar(1)")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<int>("EmailId")
                        .HasColumnName("EmailId")
                        .HasColumnType("int");

                    b.Property<int>("PersonId")
                        .HasColumnName("PersonId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__e2p_Id");

                    b.HasIndex("EmailId");

                    b.HasIndex("PersonId");

                    b.ToTable("Email2Person");
                });

            modelBuilder.Entity("JsaCqrsApi.Domain.Models.JobDescription", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("Id")
                        .HasColumnType("int");

                    b.Property<int>("DocumentId")
                        .HasColumnName("DocumentId")
                        .HasColumnType("int");

                    b.Property<int>("SourceId")
                        .HasColumnName("SourceId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__jd_Id");

                    b.HasIndex("SourceId");

                    b.ToTable("JobDescription");
                });

            modelBuilder.Entity("JsaCqrsApi.Domain.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("Id")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .HasColumnName("Comments")
                        .HasColumnType("varchar(1024)")
                        .HasMaxLength(1024)
                        .IsUnicode(false);

                    b.Property<int>("CountryId")
                        .HasColumnName("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Municipality")
                        .IsRequired()
                        .HasColumnName("Municipality")
                        .HasColumnType("varchar(64)")
                        .HasMaxLength(64)
                        .IsUnicode(false);

                    b.Property<string>("PostalCode")
                        .HasColumnName("PostalCode")
                        .HasColumnType("varchar(7)")
                        .HasMaxLength(7)
                        .IsUnicode(false);

                    b.Property<string>("Province")
                        .HasColumnName("Province")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("StreetDirection")
                        .HasColumnName("StreetDirection")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("StreetLine1")
                        .HasColumnName("StreetLine1")
                        .HasColumnType("varchar(512)")
                        .HasMaxLength(512)
                        .IsUnicode(false);

                    b.Property<string>("StreetLine2")
                        .HasColumnName("StreetLine2")
                        .HasColumnType("varchar(512)")
                        .HasMaxLength(512)
                        .IsUnicode(false);

                    b.Property<string>("StreetName")
                        .HasColumnName("StreetName")
                        .HasColumnType("varchar(64)")
                        .HasMaxLength(64)
                        .IsUnicode(false);

                    b.Property<string>("StreetNumber")
                        .HasColumnName("StreetNumber")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("StreetNumberSuffix")
                        .HasColumnName("StreetNumberSuffix")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("StreetType")
                        .HasColumnName("StreetType")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("Unit")
                        .HasColumnName("Unit")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("Id")
                        .HasName("PK__l_Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Location");
                });

            modelBuilder.Entity("JsaCqrsApi.Domain.Models.Location2Business", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("Id")
                        .HasColumnType("int");

                    b.Property<string>("Active")
                        .IsRequired()
                        .HasColumnName("Active")
                        .HasColumnType("varchar(1)")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<int>("BusinessId")
                        .HasColumnName("BusinessId")
                        .HasColumnType("int");

                    b.Property<int>("LocationId")
                        .HasColumnName("LocationId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__l2b_Id");

                    b.HasIndex("BusinessId");

                    b.HasIndex("LocationId");

                    b.ToTable("Location2Business");
                });

            modelBuilder.Entity("JsaCqrsApi.Domain.Models.Location2Person", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("Id")
                        .HasColumnType("int");

                    b.Property<string>("Active")
                        .IsRequired()
                        .HasColumnName("Active")
                        .HasColumnType("varchar(1)")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<int>("LocationId")
                        .HasColumnName("LocationId")
                        .HasColumnType("int");

                    b.Property<int>("PersonId")
                        .HasColumnName("PersonId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__l2p_Id");

                    b.HasIndex("LocationId");

                    b.HasIndex("PersonId");

                    b.ToTable("Location2Person");
                });

            modelBuilder.Entity("JsaCqrsApi.Domain.Models.Opportunity", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("Id")
                        .HasColumnType("int");

                    b.Property<string>("Active")
                        .IsRequired()
                        .HasColumnName("Active")
                        .HasColumnType("char(1)")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<int>("JobDescriptionId")
                        .HasColumnName("JobDescriptionId")
                        .HasColumnType("int");

                    b.Property<int>("ResumeId")
                        .HasColumnName("ResumeId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__o_Id");

                    b.HasIndex("JobDescriptionId");

                    b.HasIndex("ResumeId");

                    b.ToTable("Opportunity");
                });

            modelBuilder.Entity("JsaCqrsApi.Domain.Models.OpportunityAction", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("Id")
                        .HasColumnType("int");

                    b.Property<int>("ActionResultStatusId")
                        .HasColumnName("ActionResultStatusId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateTime")
                        .HasColumnName("DateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnName("Description")
                        .HasColumnType("varchar(1024)")
                        .HasMaxLength(1024)
                        .IsUnicode(false);

                    b.Property<int>("OpportunityActionTypeId")
                        .HasColumnName("OpportunityActionTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("OpportunityDocumentId")
                        .HasColumnName("OpportunityDocumentId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__oa_Id");

                    b.HasIndex("ActionResultStatusId");

                    b.HasIndex("OpportunityActionTypeId");

                    b.HasIndex("OpportunityDocumentId");

                    b.ToTable("OpportunityAction");
                });

            modelBuilder.Entity("JsaCqrsApi.Domain.Models.OpportunityActionPerson", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("Id")
                        .HasColumnType("int");

                    b.Property<int>("OpportunityActionId")
                        .HasColumnName("OpportunityActionId")
                        .HasColumnType("int");

                    b.Property<int>("PersonId")
                        .HasColumnName("PersonId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__oap_Id");

                    b.HasIndex("OpportunityActionId");

                    b.HasIndex("PersonId");

                    b.ToTable("OpportunityActionPeople");
                });

            modelBuilder.Entity("JsaCqrsApi.Domain.Models.OpportunityActionType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("Id")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnName("Description")
                        .HasColumnType("varchar(1024)")
                        .HasMaxLength(1024)
                        .IsUnicode(false);

                    b.Property<string>("Note")
                        .HasColumnName("Note")
                        .HasColumnType("varchar(1024)")
                        .HasMaxLength(1024)
                        .IsUnicode(false);

                    b.Property<int>("SequenceNumber")
                        .HasColumnName("SequenceNumber")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnName("Title")
                        .HasColumnType("varchar(512)")
                        .HasMaxLength(512)
                        .IsUnicode(false);

                    b.HasKey("Id")
                        .HasName("PK__oat_Id");

                    b.ToTable("OpportunityActionType");
                });

            modelBuilder.Entity("JsaCqrsApi.Domain.Models.OpportunityDocument", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("Id")
                        .HasColumnType("int");

                    b.Property<int?>("Document")
                        .HasColumnName("Document")
                        .HasColumnType("int");

                    b.Property<int?>("OpportunityId")
                        .HasColumnName("OpportunityId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__od_Id");

                    b.HasIndex("OpportunityId");

                    b.ToTable("OpportunityDocument");
                });

            modelBuilder.Entity("JsaCqrsApi.Domain.Models.OpportunityWorkflow", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("Id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnName("DateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnName("Description")
                        .HasColumnType("varchar(1024)")
                        .HasMaxLength(1024)
                        .IsUnicode(false);

                    b.Property<int>("OpportunityId")
                        .HasColumnName("OpportunityId")
                        .HasColumnType("int");

                    b.Property<int?>("WorkFlowResultStatusId")
                        .HasColumnName("WorkFlowResultStatusId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__ow_Id");

                    b.HasIndex("OpportunityId");

                    b.HasIndex("WorkFlowResultStatusId");

                    b.ToTable("OpportunityWorkflow");
                });

            modelBuilder.Entity("JsaCqrsApi.Domain.Models.OpportunityWorkflowAction", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("Id")
                        .HasColumnType("int");

                    b.Property<int>("OpportunityActionId")
                        .HasColumnName("OpportunityActionId")
                        .HasColumnType("int");

                    b.Property<int>("OpportunityWorkflowId")
                        .HasColumnName("OpportunityWorkflowId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__owa_Id");

                    b.HasIndex("OpportunityActionId");

                    b.HasIndex("OpportunityWorkflowId");

                    b.ToTable("OpportunityWorkflowAction");
                });

            modelBuilder.Entity("JsaCqrsApi.Domain.Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("Id")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .HasColumnName("Comments")
                        .HasColumnType("varchar(1028)")
                        .HasMaxLength(1028)
                        .IsUnicode(false);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnName("FirstName")
                        .HasColumnType("varchar(32)")
                        .HasMaxLength(32)
                        .IsUnicode(false);

                    b.Property<string>("LastName")
                        .HasColumnName("LastName")
                        .HasColumnType("varchar(64)")
                        .HasMaxLength(64)
                        .IsUnicode(false);

                    b.Property<string>("NickName")
                        .HasColumnName("NickName")
                        .HasColumnType("varchar(64)")
                        .HasMaxLength(64)
                        .IsUnicode(false);

                    b.Property<string>("Position")
                        .HasColumnName("Position")
                        .HasColumnType("varchar(128)")
                        .HasMaxLength(128)
                        .IsUnicode(false);

                    b.Property<string>("Title")
                        .HasColumnName("Title")
                        .HasColumnType("varchar(512)")
                        .HasMaxLength(512)
                        .IsUnicode(false);

                    b.HasKey("Id")
                        .HasName("PK__p_Id");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("JsaCqrsApi.Domain.Models.Person2Business", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("Id")
                        .HasColumnType("int");

                    b.Property<string>("Active")
                        .IsRequired()
                        .HasColumnName("Active")
                        .HasColumnType("varchar(1)")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<int>("BusinessId")
                        .HasColumnName("BusinessId")
                        .HasColumnType("int");

                    b.Property<int>("PersonId")
                        .HasColumnName("PersonId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__p2b_Id");

                    b.HasIndex("BusinessId");

                    b.HasIndex("PersonId");

                    b.ToTable("Person2Business");
                });

            modelBuilder.Entity("JsaCqrsApi.Domain.Models.Phone", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("Id")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasColumnName("Comment")
                        .HasColumnType("varchar(1024)")
                        .HasMaxLength(1024)
                        .IsUnicode(false);

                    b.Property<string>("Fax")
                        .IsRequired()
                        .HasColumnName("Fax")
                        .HasColumnType("char(1)")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("Name")
                        .HasColumnName("Name")
                        .HasColumnType("varchar(512)")
                        .HasMaxLength(512)
                        .IsUnicode(false);

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnName("Number")
                        .HasColumnType("varchar(320)")
                        .HasMaxLength(320)
                        .IsUnicode(false);

                    b.HasKey("Id")
                        .HasName("PK__ph_Id");

                    b.ToTable("Phone");
                });

            modelBuilder.Entity("JsaCqrsApi.Domain.Models.Phone2Business", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("Id")
                        .HasColumnType("int");

                    b.Property<string>("Active")
                        .IsRequired()
                        .HasColumnName("Active")
                        .HasColumnType("varchar(1)")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<int>("BusinessId")
                        .HasColumnName("BusinessId")
                        .HasColumnType("int");

                    b.Property<int>("PhoneId")
                        .HasColumnName("PhoneId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__ph2b_Id");

                    b.HasIndex("BusinessId");

                    b.HasIndex("PhoneId");

                    b.ToTable("Phone2Business");
                });

            modelBuilder.Entity("JsaCqrsApi.Domain.Models.Phone2Person", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("Id")
                        .HasColumnType("int");

                    b.Property<string>("Active")
                        .IsRequired()
                        .HasColumnName("Active")
                        .HasColumnType("varchar(1)")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<int>("PersonId")
                        .HasColumnName("PersonId")
                        .HasColumnType("int");

                    b.Property<int>("PhoneId")
                        .HasColumnName("PhoneId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__ph2p_Id");

                    b.HasIndex("PersonId");

                    b.ToTable("jsa_Phone2Person");
                });

            modelBuilder.Entity("JsaCqrsApi.Domain.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Barcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("BuyingPrice")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("ConfidentialData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18,4)");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("JsaCqrsApi.Domain.Models.ResultCategory", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("Id")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnName("Code")
                        .HasColumnType("varchar(3)")
                        .HasMaxLength(3)
                        .IsUnicode(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name")
                        .HasColumnType("varchar(64)")
                        .HasMaxLength(64)
                        .IsUnicode(false);

                    b.HasKey("Id")
                        .HasName("PK__rc_Id");

                    b.ToTable("ResultCategory");
                });

            modelBuilder.Entity("JsaCqrsApi.Domain.Models.ResultStatus", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("Id")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnName("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnName("Code")
                        .HasColumnType("varchar(3)")
                        .HasMaxLength(3)
                        .IsUnicode(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name")
                        .HasColumnType("varchar(64)")
                        .HasMaxLength(64)
                        .IsUnicode(false);

                    b.HasKey("Id")
                        .HasName("PK__rs_Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("ResultStatus");
                });

            modelBuilder.Entity("JsaCqrsApi.Domain.Models.Resume", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<string>("Active")
                        .IsRequired()
                        .HasColumnName("Active")
                        .HasColumnType("varchar(1)")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<int>("DocumentId")
                        .HasColumnType("int");

                    b.Property<int?>("SubVersion")
                        .HasColumnType("int");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.Property<DateTime>("VersioningDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK__r_Id");

                    b.ToTable("Resume");
                });

            modelBuilder.Entity("JsaCqrsApi.Domain.Models.Source", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("Id")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasColumnName("Comment")
                        .HasColumnType("varchar(2048)")
                        .HasMaxLength(2048)
                        .IsUnicode(false);

                    b.Property<int?>("EmailId")
                        .HasColumnName("EmailId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name")
                        .HasColumnType("varchar(1024)")
                        .HasMaxLength(1024)
                        .IsUnicode(false);

                    b.Property<int?>("PersonId")
                        .HasColumnName("PersonId")
                        .HasColumnType("int");

                    b.Property<int>("SourceTypeId")
                        .HasColumnName("SourceTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("UrlId")
                        .HasColumnName("UrlId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__s_Id");

                    b.HasIndex("EmailId");

                    b.HasIndex("PersonId");

                    b.HasIndex("SourceTypeId");

                    b.HasIndex("UrlId");

                    b.ToTable("Source");
                });

            modelBuilder.Entity("JsaCqrsApi.Domain.Models.SourceType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("ID")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnName("Type")
                        .HasColumnType("varchar(1)")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnName("TypeName")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("Id")
                        .HasName("PK__st_Id");

                    b.ToTable("SourceType");
                });

            modelBuilder.Entity("JsaCqrsApi.Domain.Models.UrlLink", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("Id")
                        .HasColumnType("int");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnName("Body")
                        .HasColumnType("varchar(2048)")
                        .HasMaxLength(2048)
                        .IsUnicode(false);

                    b.Property<string>("Comment")
                        .HasColumnName("Comment")
                        .HasColumnType("varchar(1024)")
                        .HasMaxLength(1024)
                        .IsUnicode(false);

                    b.HasKey("Id")
                        .HasName("PK__u_Id");

                    b.ToTable("Url");
                });

            modelBuilder.Entity("JsaCqrsApi.Domain.Models.UrlLink2Business", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("Id")
                        .HasColumnType("int");

                    b.Property<string>("Active")
                        .IsRequired()
                        .HasColumnName("Active")
                        .HasColumnType("varchar(1)")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<int>("BusinessId")
                        .HasColumnName("BusinessId")
                        .HasColumnType("int");

                    b.Property<int>("UrlId")
                        .HasColumnName("UrlId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__u2b_Id");

                    b.HasIndex("BusinessId");

                    b.HasIndex("UrlId");

                    b.ToTable("UrlLink2Business");
                });

            modelBuilder.Entity("JsaCqrsApi.Domain.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("Id")
                        .HasColumnType("int");

                    b.Property<int>("PersonId")
                        .HasColumnName("PersonId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__usr_Id");

                    b.HasIndex("PersonId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("JsaCqrsApi.Domain.Models.Document", b =>
                {
                    b.HasOne("JsaCqrsApi.Domain.Models.DocFormat", "DocFormat")
                        .WithMany("DocumentList")
                        .HasForeignKey("DocFormatId")
                        .HasConstraintName("FK__d_DocFormatId_2_df_Id");

                    b.HasOne("JsaCqrsApi.Domain.Models.Email", "Email")
                        .WithMany("DocumentList")
                        .HasForeignKey("EmailId")
                        .HasConstraintName("FK__d_EmailId_2_e_Id");

                    b.HasOne("JsaCqrsApi.Domain.Models.UrlLink", "UrlLink")
                        .WithMany("Documents")
                        .HasForeignKey("UrLinklId")
                        .HasConstraintName("FK__d_UrlId_2_u_Id");
                });

            modelBuilder.Entity("JsaCqrsApi.Domain.Models.Email2Business", b =>
                {
                    b.HasOne("JsaCqrsApi.Domain.Models.Business", "Business")
                        .WithMany("Email2BusinessList")
                        .HasForeignKey("BusinessId")
                        .HasConstraintName("FK_e2b_BusinessId_2_b_Id")
                        .IsRequired();

                    b.HasOne("JsaCqrsApi.Domain.Models.Email", "Email")
                        .WithMany("Email2BusinessList")
                        .HasForeignKey("EmailId")
                        .HasConstraintName("FK_e2b_EmailId_2_e_Id")
                        .IsRequired();
                });

            modelBuilder.Entity("JsaCqrsApi.Domain.Models.Email2Person", b =>
                {
                    b.HasOne("JsaCqrsApi.Domain.Models.Email", "Email")
                        .WithMany("Email2PeopleList")
                        .HasForeignKey("EmailId")
                        .HasConstraintName("PK__e2p_EmailId_2_e_Id")
                        .IsRequired();

                    b.HasOne("JsaCqrsApi.Domain.Models.Person", "Person")
                        .WithMany("Email2Person")
                        .HasForeignKey("PersonId")
                        .HasConstraintName("PK__e2p_PersonId_2_p_Id")
                        .IsRequired();
                });

            modelBuilder.Entity("JsaCqrsApi.Domain.Models.JobDescription", b =>
                {
                    b.HasOne("JsaCqrsApi.Domain.Models.Source", "Source")
                        .WithMany("JobDescriptions")
                        .HasForeignKey("SourceId")
                        .HasConstraintName("FK__jd_SourceId_2_s_Id")
                        .IsRequired();
                });

            modelBuilder.Entity("JsaCqrsApi.Domain.Models.Location", b =>
                {
                    b.HasOne("JsaCqrsApi.Domain.Models.Country", "Country")
                        .WithMany("LocationList")
                        .HasForeignKey("CountryId")
                        .HasConstraintName("FK__l_CountryId_2_c_Id")
                        .IsRequired();
                });

            modelBuilder.Entity("JsaCqrsApi.Domain.Models.Location2Business", b =>
                {
                    b.HasOne("JsaCqrsApi.Domain.Models.Business", "Business")
                        .WithMany("Location2BusinessList")
                        .HasForeignKey("BusinessId")
                        .HasConstraintName("FK__l2b_BusinessId_2_b_Id")
                        .IsRequired();

                    b.HasOne("JsaCqrsApi.Domain.Models.Location", "Location")
                        .WithMany("Location2Businesses")
                        .HasForeignKey("LocationId")
                        .HasConstraintName("FK__l2b_LocationId_2_l_Id")
                        .IsRequired();
                });

            modelBuilder.Entity("JsaCqrsApi.Domain.Models.Location2Person", b =>
                {
                    b.HasOne("JsaCqrsApi.Domain.Models.Location", "Location")
                        .WithMany("Location2People")
                        .HasForeignKey("LocationId")
                        .HasConstraintName("FK__l2p_LocationId_2_l_Id")
                        .IsRequired();

                    b.HasOne("JsaCqrsApi.Domain.Models.Person", "Person")
                        .WithMany("Location2Person")
                        .HasForeignKey("PersonId")
                        .HasConstraintName("FK__l2p_PersonId_2_p_Id")
                        .IsRequired();
                });

            modelBuilder.Entity("JsaCqrsApi.Domain.Models.Opportunity", b =>
                {
                    b.HasOne("JsaCqrsApi.Domain.Models.JobDescription", "JobDescription")
                        .WithMany("Opportunities")
                        .HasForeignKey("JobDescriptionId")
                        .HasConstraintName("FK__o_JobDescriptionId_2_jd_Id")
                        .IsRequired();

                    b.HasOne("JsaCqrsApi.Domain.Models.Resume", "Resume")
                        .WithMany("Opportunities")
                        .HasForeignKey("ResumeId")
                        .HasConstraintName("FK__o_ResumeId_2_r_Id")
                        .IsRequired();
                });

            modelBuilder.Entity("JsaCqrsApi.Domain.Models.OpportunityAction", b =>
                {
                    b.HasOne("JsaCqrsApi.Domain.Models.ResultStatus", "ActionResultStatus")
                        .WithMany("OpportunityActions")
                        .HasForeignKey("ActionResultStatusId")
                        .HasConstraintName("FK__oa_ResultStatusId_2_rs_Id")
                        .IsRequired();

                    b.HasOne("JsaCqrsApi.Domain.Models.OpportunityActionType", "OpportunityActionType")
                        .WithMany("OpportunityActions")
                        .HasForeignKey("OpportunityActionTypeId")
                        .HasConstraintName("FK__oa_OpportunityActionTypeId_2_oat_Id")
                        .IsRequired();

                    b.HasOne("JsaCqrsApi.Domain.Models.OpportunityDocument", "OpportunityDocument")
                        .WithMany("OpportunityActions")
                        .HasForeignKey("OpportunityDocumentId")
                        .HasConstraintName("FK__oa_OpportunityDocumentId_2_od_Id");
                });

            modelBuilder.Entity("JsaCqrsApi.Domain.Models.OpportunityActionPerson", b =>
                {
                    b.HasOne("JsaCqrsApi.Domain.Models.OpportunityAction", "OpportunityAction")
                        .WithMany("OpportunityActionPeople")
                        .HasForeignKey("OpportunityActionId")
                        .HasConstraintName("FK__oap_OpportunityActionId_2_oa_Id")
                        .IsRequired();

                    b.HasOne("JsaCqrsApi.Domain.Models.Person", "Person")
                        .WithMany("OpportunityActionPerson")
                        .HasForeignKey("PersonId")
                        .HasConstraintName("FK__oap_PersonId_2_p_Id")
                        .IsRequired();
                });

            modelBuilder.Entity("JsaCqrsApi.Domain.Models.OpportunityDocument", b =>
                {
                    b.HasOne("JsaCqrsApi.Domain.Models.Opportunity", "Opportunity")
                        .WithMany("OpportunityDocuments")
                        .HasForeignKey("OpportunityId")
                        .HasConstraintName("FK__od_OpportunityId_2_o_Id");
                });

            modelBuilder.Entity("JsaCqrsApi.Domain.Models.OpportunityWorkflow", b =>
                {
                    b.HasOne("JsaCqrsApi.Domain.Models.Opportunity", "Opportunity")
                        .WithMany("OpportunityWorkflows")
                        .HasForeignKey("OpportunityId")
                        .HasConstraintName("FK__ow_OpportunityId_2_o_Id")
                        .IsRequired();

                    b.HasOne("JsaCqrsApi.Domain.Models.ResultStatus", "WorkFlowResultStatus")
                        .WithMany("OpportunityWorkflows")
                        .HasForeignKey("WorkFlowResultStatusId")
                        .HasConstraintName("FK_ow_WorkflowResultStatusId_2_rs_Id");
                });

            modelBuilder.Entity("JsaCqrsApi.Domain.Models.OpportunityWorkflowAction", b =>
                {
                    b.HasOne("JsaCqrsApi.Domain.Models.OpportunityAction", "OpportunityAction")
                        .WithMany("OpportunityWorkflowActions")
                        .HasForeignKey("OpportunityActionId")
                        .HasConstraintName("FK__owa_OpportunityActionId_2_oa_Id")
                        .IsRequired();

                    b.HasOne("JsaCqrsApi.Domain.Models.OpportunityWorkflow", "OpportunityWorkflow")
                        .WithMany("OpportunityWorkflowActions")
                        .HasForeignKey("OpportunityWorkflowId")
                        .HasConstraintName("FK__owa_OpportunityWorkflowId_2_ow_Id")
                        .IsRequired();
                });

            modelBuilder.Entity("JsaCqrsApi.Domain.Models.Person2Business", b =>
                {
                    b.HasOne("JsaCqrsApi.Domain.Models.Business", "Business")
                        .WithMany("Person2BusinessList")
                        .HasForeignKey("BusinessId")
                        .HasConstraintName("PK__p2b_BusinessId_2_b_Id")
                        .IsRequired();

                    b.HasOne("JsaCqrsApi.Domain.Models.Person", "Person")
                        .WithMany("Person2Businesses")
                        .HasForeignKey("PersonId")
                        .HasConstraintName("PK__p2b_PersonId_2_p_Id")
                        .IsRequired();
                });

            modelBuilder.Entity("JsaCqrsApi.Domain.Models.Phone2Business", b =>
                {
                    b.HasOne("JsaCqrsApi.Domain.Models.Business", "Business")
                        .WithMany("Phone2BusinessList")
                        .HasForeignKey("BusinessId")
                        .HasConstraintName("PK__ph2b_BusinessId_2_b_Id")
                        .IsRequired();

                    b.HasOne("JsaCqrsApi.Domain.Models.Phone", "Phone")
                        .WithMany("Phone2Businesses")
                        .HasForeignKey("PhoneId")
                        .HasConstraintName("PK__ph2b_PhoneId_2_ph_Id")
                        .IsRequired();
                });

            modelBuilder.Entity("JsaCqrsApi.Domain.Models.Phone2Person", b =>
                {
                    b.HasOne("JsaCqrsApi.Domain.Models.Person", "Person")
                        .WithMany("Phone2Person")
                        .HasForeignKey("PersonId")
                        .HasConstraintName("PK__ph2p_PersonId_2_p_Id")
                        .IsRequired();

                    b.HasOne("JsaCqrsApi.Domain.Models.Phone", "Phone")
                        .WithMany("Phone2People")
                        .HasForeignKey("PersonId")
                        .HasConstraintName("PK__ph2p_PhoneId_2_ph_Id")
                        .IsRequired();
                });

            modelBuilder.Entity("JsaCqrsApi.Domain.Models.ResultStatus", b =>
                {
                    b.HasOne("JsaCqrsApi.Domain.Models.ResultCategory", "Category")
                        .WithMany("ResultStatuses")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK__rs_CategoryId_2_rc_Id")
                        .IsRequired();
                });

            modelBuilder.Entity("JsaCqrsApi.Domain.Models.Source", b =>
                {
                    b.HasOne("JsaCqrsApi.Domain.Models.Email", "Email")
                        .WithMany("SourceList")
                        .HasForeignKey("EmailId")
                        .HasConstraintName("FK_s_EmailId_2_e_Id");

                    b.HasOne("JsaCqrsApi.Domain.Models.Person", "Person")
                        .WithMany("Sources")
                        .HasForeignKey("PersonId")
                        .HasConstraintName("FK__s_PersonId_2_p_Id");

                    b.HasOne("JsaCqrsApi.Domain.Models.SourceType", "SourceType")
                        .WithMany("Sources")
                        .HasForeignKey("SourceTypeId")
                        .HasConstraintName("FK__s_SourceTypeId_2_st_Id")
                        .IsRequired();

                    b.HasOne("JsaCqrsApi.Domain.Models.UrlLink", "UrlLink")
                        .WithMany("Sources")
                        .HasForeignKey("UrlId")
                        .HasConstraintName("FK__s_UrlId_2_u_Id");
                });

            modelBuilder.Entity("JsaCqrsApi.Domain.Models.UrlLink2Business", b =>
                {
                    b.HasOne("JsaCqrsApi.Domain.Models.Business", "Business")
                        .WithMany("UrlLink2BusinessList")
                        .HasForeignKey("BusinessId")
                        .HasConstraintName("PK_u2b_BusinessId_2_b_Id")
                        .IsRequired();

                    b.HasOne("JsaCqrsApi.Domain.Models.UrlLink", "UrlLink")
                        .WithMany("UrlLink2Businesses")
                        .HasForeignKey("UrlId")
                        .HasConstraintName("PK_u2b_UrlId_2_u_Id")
                        .IsRequired();
                });

            modelBuilder.Entity("JsaCqrsApi.Domain.Models.User", b =>
                {
                    b.HasOne("JsaCqrsApi.Domain.Models.Person", "Person")
                        .WithMany("Users")
                        .HasForeignKey("PersonId")
                        .HasConstraintName("FK__usr_PersonId_2_p_Id")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
