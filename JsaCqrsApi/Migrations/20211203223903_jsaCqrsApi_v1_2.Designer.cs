// <auto-generated />
using System;
using JsaCqrsApi.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace JsaCqrsApi.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20211203223903_jsaCqrsApi_v1_2")]
    partial class jsaCqrsApi_v1_2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("JsaCqrsApi.Models.JsaBusiness", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("JsaBusiness");
                });

            modelBuilder.Entity("JsaCqrsApi.Models.JsaCountry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("JsaCountry");
                });

            modelBuilder.Entity("JsaCqrsApi.Models.JsaDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DBody")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DDocFormatId")
                        .HasColumnType("int");

                    b.Property<int?>("DEmailId")
                        .HasColumnType("int");

                    b.Property<string>("DFullPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DUrlId")
                        .HasColumnType("int");

                    b.Property<int?>("JsaEmailId")
                        .HasColumnType("int");

                    b.Property<int?>("JsaUrlId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("JsaEmailId");

                    b.HasIndex("JsaUrlId");

                    b.ToTable("JsaDocument");
                });

            modelBuilder.Entity("JsaCqrsApi.Models.JsaEmail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EComment")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("JsaEmail");
                });

            modelBuilder.Entity("JsaCqrsApi.Models.JsaEmail2Business", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("E2bActive")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("E2bBusinessId")
                        .HasColumnType("int");

                    b.Property<int>("E2bEmailId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("E2bBusinessId");

                    b.HasIndex("E2bEmailId");

                    b.ToTable("JsaEmail2Business");
                });

            modelBuilder.Entity("JsaCqrsApi.Models.JsaEmail2Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("E2pActive")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("E2pEmailId")
                        .HasColumnType("int");

                    b.Property<int>("E2pPersonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("E2pEmailId");

                    b.HasIndex("E2pPersonId");

                    b.ToTable("JsaEmail2Person");
                });

            modelBuilder.Entity("JsaCqrsApi.Models.JsaJobDescription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("JdDocumentId")
                        .HasColumnType("int");

                    b.Property<int>("JdSourceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("JdSourceId");

                    b.ToTable("JsaJobDescription");
                });

            modelBuilder.Entity("JsaCqrsApi.Models.JsaLocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LComments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LCountryId")
                        .HasColumnType("int");

                    b.Property<string>("LMunicipality")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LPostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LProvince")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LStreetDirection")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LStreetLine1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LStreetLine2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LStreetName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LStreetNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LStreetNumberSuffix")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LStreetType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LUnit")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LCountryId");

                    b.ToTable("JsaLocation");
                });

            modelBuilder.Entity("JsaCqrsApi.Models.JsaLocation2Business", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("L2bBusinessId")
                        .HasColumnType("int");

                    b.Property<int>("L2bLocationId")
                        .HasColumnType("int");

                    b.Property<string>("L2pActive")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("L2bBusinessId");

                    b.HasIndex("L2bLocationId");

                    b.ToTable("JsaLocation2Business");
                });

            modelBuilder.Entity("JsaCqrsApi.Models.JsaLocation2Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("L2pActive")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("L2pLocationId")
                        .HasColumnType("int");

                    b.Property<int>("L2pPersonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("L2pLocationId");

                    b.HasIndex("L2pPersonId");

                    b.ToTable("JsaLocation2Person");
                });

            modelBuilder.Entity("JsaCqrsApi.Models.JsaOpportunity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("OActive")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OJobDescriptionId")
                        .HasColumnType("int");

                    b.Property<int>("OResumeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OJobDescriptionId");

                    b.HasIndex("OResumeId");

                    b.ToTable("JsaOpportunity");
                });

            modelBuilder.Entity("JsaCqrsApi.Models.JsaOpportunityAction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("OaActionResultStatusId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OaDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("OaDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OaOpportunityActionTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("OaOpportunityDocumentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OaActionResultStatusId");

                    b.HasIndex("OaOpportunityActionTypeId");

                    b.HasIndex("OaOpportunityDocumentId");

                    b.ToTable("JsaOpportunityAction");
                });

            modelBuilder.Entity("JsaCqrsApi.Models.JsaOpportunityActionPerson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("OapOpportunityActionId")
                        .HasColumnType("int");

                    b.Property<int>("OapPersonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OapOpportunityActionId");

                    b.HasIndex("OapPersonId");

                    b.ToTable("JsaOpportunityActionPerson");
                });

            modelBuilder.Entity("JsaCqrsApi.Models.JsaOpportunityActionType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("OatDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OatNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OatSequenceNumber")
                        .HasColumnType("int");

                    b.Property<string>("OatTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("JsaOpportunityActionType");
                });

            modelBuilder.Entity("JsaCqrsApi.Models.JsaOpportunityDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("OdDocument")
                        .HasColumnType("int");

                    b.Property<int?>("OdOpportunityId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OdOpportunityId");

                    b.ToTable("JsaOpportunityDocument");
                });

            modelBuilder.Entity("JsaCqrsApi.Models.JsaOpportunityWorkflow", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("OwDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("OwDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OwOpportunityId")
                        .HasColumnType("int");

                    b.Property<int?>("OwWorkFlowResultStatusId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OwOpportunityId");

                    b.HasIndex("OwWorkFlowResultStatusId");

                    b.ToTable("JsaOpportunityWorkflow");
                });

            modelBuilder.Entity("JsaCqrsApi.Models.JsaOpportunityWorkflowAction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("OwaOpportunityActionId")
                        .HasColumnType("int");

                    b.Property<int>("OwaOpportunityWorkflowId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OwaOpportunityActionId");

                    b.HasIndex("OwaOpportunityWorkflowId");

                    b.ToTable("JsaOpportunityWorkflowAction");
                });

            modelBuilder.Entity("JsaCqrsApi.Models.JsaPerson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PComments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PFirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PLastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PNickName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PPosition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("JsaPerson");
                });

            modelBuilder.Entity("JsaCqrsApi.Models.JsaPerson2Business", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("P2bActive")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("P2bBusinessId")
                        .HasColumnType("int");

                    b.Property<int>("P2bPersonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("P2bBusinessId");

                    b.HasIndex("P2bPersonId");

                    b.ToTable("JsaPerson2Business");
                });

            modelBuilder.Entity("JsaCqrsApi.Models.JsaPhone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PhComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhFax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("JsaPhone");
                });

            modelBuilder.Entity("JsaCqrsApi.Models.JsaPhone2Business", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ph2bActive")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Ph2bBusinessId")
                        .HasColumnType("int");

                    b.Property<int>("Ph2bPhoneId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Ph2bBusinessId");

                    b.HasIndex("Ph2bPhoneId");

                    b.ToTable("JsaPhone2Business");
                });

            modelBuilder.Entity("JsaCqrsApi.Models.JsaPhone2Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ph2pActive")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Ph2pPersonId")
                        .HasColumnType("int");

                    b.Property<int>("Ph2pPhoneId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Ph2pPersonId");

                    b.HasIndex("Ph2pPhoneId");

                    b.ToTable("JsaPhone2Person");
                });

            modelBuilder.Entity("JsaCqrsApi.Models.JsaResultCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RcCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RcName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("JsaResultCategory");
                });

            modelBuilder.Entity("JsaCqrsApi.Models.JsaResultStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("RsCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("RsCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RsName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RsCategoryId");

                    b.ToTable("JsaResultStatus");
                });

            modelBuilder.Entity("JsaCqrsApi.Models.JsaResume", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RActive")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RDocumentId")
                        .HasColumnType("int");

                    b.Property<int?>("RSubVersion")
                        .HasColumnType("int");

                    b.Property<int>("RVersion")
                        .HasColumnType("int");

                    b.Property<DateTime>("RVersioningDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("JsaResume");
                });

            modelBuilder.Entity("JsaCqrsApi.Models.JsaSource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("JsaEmailId")
                        .HasColumnType("int");

                    b.Property<int?>("JsaPersonId")
                        .HasColumnType("int");

                    b.Property<int?>("JsaSourceTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("JsaUrlId")
                        .HasColumnType("int");

                    b.Property<string>("SComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SEmailId")
                        .HasColumnType("int");

                    b.Property<string>("SName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SPersonId")
                        .HasColumnType("int");

                    b.Property<int>("SSourceTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("SUrlId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("JsaEmailId");

                    b.HasIndex("JsaPersonId");

                    b.HasIndex("JsaSourceTypeId");

                    b.HasIndex("JsaUrlId");

                    b.ToTable("JsaSource");
                });

            modelBuilder.Entity("JsaCqrsApi.Models.JsaSourceType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("StType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("JsaSourceType");
                });

            modelBuilder.Entity("JsaCqrsApi.Models.JsaUrl", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("UBody")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UComment")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("JsaUrl");
                });

            modelBuilder.Entity("JsaCqrsApi.Models.JsaUrl2Business", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("U2bActive")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("U2bBusinessId")
                        .HasColumnType("int");

                    b.Property<int>("U2bUrlId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("U2bBusinessId");

                    b.HasIndex("U2bUrlId");

                    b.ToTable("JsaUrl2Business");
                });

            modelBuilder.Entity("JsaCqrsApi.Models.JsaUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("UsrPersonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsrPersonId");

                    b.ToTable("JsaUser");
                });

            modelBuilder.Entity("JsaCqrsApi.Models.JsaDocument", b =>
                {
                    b.HasOne("JsaCqrsApi.Models.JsaEmail", null)
                        .WithMany("JsaDocuments")
                        .HasForeignKey("JsaEmailId");

                    b.HasOne("JsaCqrsApi.Models.JsaUrl", null)
                        .WithMany("JsaDocuments")
                        .HasForeignKey("JsaUrlId");
                });

            modelBuilder.Entity("JsaCqrsApi.Models.JsaEmail2Business", b =>
                {
                    b.HasOne("JsaCqrsApi.Models.JsaBusiness", "E2bBusiness")
                        .WithMany("JsaEmail2Businesses")
                        .HasForeignKey("E2bBusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JsaCqrsApi.Models.JsaEmail", "E2bEmail")
                        .WithMany("JsaEmail2Businesses")
                        .HasForeignKey("E2bEmailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("E2bBusiness");

                    b.Navigation("E2bEmail");
                });

            modelBuilder.Entity("JsaCqrsApi.Models.JsaEmail2Person", b =>
                {
                    b.HasOne("JsaCqrsApi.Models.JsaEmail", "E2pEmail")
                        .WithMany("JsaEmail2People")
                        .HasForeignKey("E2pEmailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JsaCqrsApi.Models.JsaPerson", "E2pPerson")
                        .WithMany("JsaEmail2People")
                        .HasForeignKey("E2pPersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("E2pEmail");

                    b.Navigation("E2pPerson");
                });

            modelBuilder.Entity("JsaCqrsApi.Models.JsaJobDescription", b =>
                {
                    b.HasOne("JsaCqrsApi.Models.JsaSource", "JdSource")
                        .WithMany()
                        .HasForeignKey("JdSourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("JdSource");
                });

            modelBuilder.Entity("JsaCqrsApi.Models.JsaLocation", b =>
                {
                    b.HasOne("JsaCqrsApi.Models.JsaCountry", "LCountry")
                        .WithMany("JsaLocations")
                        .HasForeignKey("LCountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LCountry");
                });

            modelBuilder.Entity("JsaCqrsApi.Models.JsaLocation2Business", b =>
                {
                    b.HasOne("JsaCqrsApi.Models.JsaBusiness", "L2bBusiness")
                        .WithMany("JsaLocation2Businesses")
                        .HasForeignKey("L2bBusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JsaCqrsApi.Models.JsaLocation", "L2bLocation")
                        .WithMany("JsaLocation2Businesses")
                        .HasForeignKey("L2bLocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("L2bBusiness");

                    b.Navigation("L2bLocation");
                });

            modelBuilder.Entity("JsaCqrsApi.Models.JsaLocation2Person", b =>
                {
                    b.HasOne("JsaCqrsApi.Models.JsaLocation", "L2pLocation")
                        .WithMany("JsaLocation2People")
                        .HasForeignKey("L2pLocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JsaCqrsApi.Models.JsaPerson", "L2pPerson")
                        .WithMany("JsaLocation2People")
                        .HasForeignKey("L2pPersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("L2pLocation");

                    b.Navigation("L2pPerson");
                });

            modelBuilder.Entity("JsaCqrsApi.Models.JsaOpportunity", b =>
                {
                    b.HasOne("JsaCqrsApi.Models.JsaJobDescription", "OJobDescription")
                        .WithMany("JsaOpportunities")
                        .HasForeignKey("OJobDescriptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JsaCqrsApi.Models.JsaResume", "OResume")
                        .WithMany("JsaOpportunities")
                        .HasForeignKey("OResumeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OJobDescription");

                    b.Navigation("OResume");
                });

            modelBuilder.Entity("JsaCqrsApi.Models.JsaOpportunityAction", b =>
                {
                    b.HasOne("JsaCqrsApi.Models.JsaResultStatus", "OaActionResultStatus")
                        .WithMany("JsaOpportunityActions")
                        .HasForeignKey("OaActionResultStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JsaCqrsApi.Models.JsaOpportunityActionType", "OaOpportunityActionType")
                        .WithMany("JsaOpportunityActions")
                        .HasForeignKey("OaOpportunityActionTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JsaCqrsApi.Models.JsaOpportunityDocument", "OaOpportunityDocument")
                        .WithMany("JsaOpportunityActions")
                        .HasForeignKey("OaOpportunityDocumentId");

                    b.Navigation("OaActionResultStatus");

                    b.Navigation("OaOpportunityActionType");

                    b.Navigation("OaOpportunityDocument");
                });

            modelBuilder.Entity("JsaCqrsApi.Models.JsaOpportunityActionPerson", b =>
                {
                    b.HasOne("JsaCqrsApi.Models.JsaOpportunityAction", "OapOpportunityAction")
                        .WithMany("JsaOpportunityActionPeople")
                        .HasForeignKey("OapOpportunityActionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JsaCqrsApi.Models.JsaPerson", "OapPerson")
                        .WithMany("JsaOpportunityActionPeople")
                        .HasForeignKey("OapPersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OapOpportunityAction");

                    b.Navigation("OapPerson");
                });

            modelBuilder.Entity("JsaCqrsApi.Models.JsaOpportunityDocument", b =>
                {
                    b.HasOne("JsaCqrsApi.Models.JsaOpportunity", "OdOpportunity")
                        .WithMany("JsaOpportunityDocuments")
                        .HasForeignKey("OdOpportunityId");

                    b.Navigation("OdOpportunity");
                });

            modelBuilder.Entity("JsaCqrsApi.Models.JsaOpportunityWorkflow", b =>
                {
                    b.HasOne("JsaCqrsApi.Models.JsaOpportunity", "OwOpportunity")
                        .WithMany("JsaOpportunityWorkflows")
                        .HasForeignKey("OwOpportunityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JsaCqrsApi.Models.JsaResultStatus", "OwWorkFlowResultStatus")
                        .WithMany("JsaOpportunityWorkflows")
                        .HasForeignKey("OwWorkFlowResultStatusId");

                    b.Navigation("OwOpportunity");

                    b.Navigation("OwWorkFlowResultStatus");
                });

            modelBuilder.Entity("JsaCqrsApi.Models.JsaOpportunityWorkflowAction", b =>
                {
                    b.HasOne("JsaCqrsApi.Models.JsaOpportunityAction", "OwaOpportunityAction")
                        .WithMany("JsaOpportunityWorkflowActions")
                        .HasForeignKey("OwaOpportunityActionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JsaCqrsApi.Models.JsaOpportunityWorkflow", "OwaOpportunityWorkflow")
                        .WithMany("JsaOpportunityWorkflowActions")
                        .HasForeignKey("OwaOpportunityWorkflowId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OwaOpportunityAction");

                    b.Navigation("OwaOpportunityWorkflow");
                });

            modelBuilder.Entity("JsaCqrsApi.Models.JsaPerson2Business", b =>
                {
                    b.HasOne("JsaCqrsApi.Models.JsaBusiness", "P2bBusiness")
                        .WithMany("JsaPerson2Businesses")
                        .HasForeignKey("P2bBusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JsaCqrsApi.Models.JsaPerson", "P2bPerson")
                        .WithMany("JsaPerson2Businesses")
                        .HasForeignKey("P2bPersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("P2bBusiness");

                    b.Navigation("P2bPerson");
                });

            modelBuilder.Entity("JsaCqrsApi.Models.JsaPhone2Business", b =>
                {
                    b.HasOne("JsaCqrsApi.Models.JsaBusiness", "Ph2bBusiness")
                        .WithMany("JsaPhone2Businesses")
                        .HasForeignKey("Ph2bBusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JsaCqrsApi.Models.JsaPhone", "Ph2bPhone")
                        .WithMany("JsaPhone2Businesses")
                        .HasForeignKey("Ph2bPhoneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ph2bBusiness");

                    b.Navigation("Ph2bPhone");
                });

            modelBuilder.Entity("JsaCqrsApi.Models.JsaPhone2Person", b =>
                {
                    b.HasOne("JsaCqrsApi.Models.JsaPerson", "Ph2pPerson")
                        .WithMany("JsaPhone2People")
                        .HasForeignKey("Ph2pPersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JsaCqrsApi.Models.JsaPhone", "Ph2pPhone")
                        .WithMany("JsaPhone2People")
                        .HasForeignKey("Ph2pPhoneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ph2pPerson");

                    b.Navigation("Ph2pPhone");
                });

            modelBuilder.Entity("JsaCqrsApi.Models.JsaResultStatus", b =>
                {
                    b.HasOne("JsaCqrsApi.Models.JsaResultCategory", "RsCategory")
                        .WithMany("JsaResultStatuses")
                        .HasForeignKey("RsCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RsCategory");
                });

            modelBuilder.Entity("JsaCqrsApi.Models.JsaSource", b =>
                {
                    b.HasOne("JsaCqrsApi.Models.JsaEmail", null)
                        .WithMany("JsaSources")
                        .HasForeignKey("JsaEmailId");

                    b.HasOne("JsaCqrsApi.Models.JsaPerson", null)
                        .WithMany("JsaSources")
                        .HasForeignKey("JsaPersonId");

                    b.HasOne("JsaCqrsApi.Models.JsaSourceType", null)
                        .WithMany("JsaSources")
                        .HasForeignKey("JsaSourceTypeId");

                    b.HasOne("JsaCqrsApi.Models.JsaUrl", null)
                        .WithMany("JsaSources")
                        .HasForeignKey("JsaUrlId");
                });

            modelBuilder.Entity("JsaCqrsApi.Models.JsaUrl2Business", b =>
                {
                    b.HasOne("JsaCqrsApi.Models.JsaBusiness", "U2bBusiness")
                        .WithMany("JsaUrl2Businesses")
                        .HasForeignKey("U2bBusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JsaCqrsApi.Models.JsaUrl", "U2bUrl")
                        .WithMany("JsaUrl2Businesses")
                        .HasForeignKey("U2bUrlId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("U2bBusiness");

                    b.Navigation("U2bUrl");
                });

            modelBuilder.Entity("JsaCqrsApi.Models.JsaUser", b =>
                {
                    b.HasOne("JsaCqrsApi.Models.JsaPerson", "UsrPerson")
                        .WithMany("JsaUsers")
                        .HasForeignKey("UsrPersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UsrPerson");
                });

            modelBuilder.Entity("JsaCqrsApi.Models.JsaBusiness", b =>
                {
                    b.Navigation("JsaEmail2Businesses");

                    b.Navigation("JsaLocation2Businesses");

                    b.Navigation("JsaPerson2Businesses");

                    b.Navigation("JsaPhone2Businesses");

                    b.Navigation("JsaUrl2Businesses");
                });

            modelBuilder.Entity("JsaCqrsApi.Models.JsaCountry", b =>
                {
                    b.Navigation("JsaLocations");
                });

            modelBuilder.Entity("JsaCqrsApi.Models.JsaEmail", b =>
                {
                    b.Navigation("JsaDocuments");

                    b.Navigation("JsaEmail2Businesses");

                    b.Navigation("JsaEmail2People");

                    b.Navigation("JsaSources");
                });

            modelBuilder.Entity("JsaCqrsApi.Models.JsaJobDescription", b =>
                {
                    b.Navigation("JsaOpportunities");
                });

            modelBuilder.Entity("JsaCqrsApi.Models.JsaLocation", b =>
                {
                    b.Navigation("JsaLocation2Businesses");

                    b.Navigation("JsaLocation2People");
                });

            modelBuilder.Entity("JsaCqrsApi.Models.JsaOpportunity", b =>
                {
                    b.Navigation("JsaOpportunityDocuments");

                    b.Navigation("JsaOpportunityWorkflows");
                });

            modelBuilder.Entity("JsaCqrsApi.Models.JsaOpportunityAction", b =>
                {
                    b.Navigation("JsaOpportunityActionPeople");

                    b.Navigation("JsaOpportunityWorkflowActions");
                });

            modelBuilder.Entity("JsaCqrsApi.Models.JsaOpportunityActionType", b =>
                {
                    b.Navigation("JsaOpportunityActions");
                });

            modelBuilder.Entity("JsaCqrsApi.Models.JsaOpportunityDocument", b =>
                {
                    b.Navigation("JsaOpportunityActions");
                });

            modelBuilder.Entity("JsaCqrsApi.Models.JsaOpportunityWorkflow", b =>
                {
                    b.Navigation("JsaOpportunityWorkflowActions");
                });

            modelBuilder.Entity("JsaCqrsApi.Models.JsaPerson", b =>
                {
                    b.Navigation("JsaEmail2People");

                    b.Navigation("JsaLocation2People");

                    b.Navigation("JsaOpportunityActionPeople");

                    b.Navigation("JsaPerson2Businesses");

                    b.Navigation("JsaPhone2People");

                    b.Navigation("JsaSources");

                    b.Navigation("JsaUsers");
                });

            modelBuilder.Entity("JsaCqrsApi.Models.JsaPhone", b =>
                {
                    b.Navigation("JsaPhone2Businesses");

                    b.Navigation("JsaPhone2People");
                });

            modelBuilder.Entity("JsaCqrsApi.Models.JsaResultCategory", b =>
                {
                    b.Navigation("JsaResultStatuses");
                });

            modelBuilder.Entity("JsaCqrsApi.Models.JsaResultStatus", b =>
                {
                    b.Navigation("JsaOpportunityActions");

                    b.Navigation("JsaOpportunityWorkflows");
                });

            modelBuilder.Entity("JsaCqrsApi.Models.JsaResume", b =>
                {
                    b.Navigation("JsaOpportunities");
                });

            modelBuilder.Entity("JsaCqrsApi.Models.JsaSourceType", b =>
                {
                    b.Navigation("JsaSources");
                });

            modelBuilder.Entity("JsaCqrsApi.Models.JsaUrl", b =>
                {
                    b.Navigation("JsaDocuments");

                    b.Navigation("JsaSources");

                    b.Navigation("JsaUrl2Businesses");
                });
#pragma warning restore 612, 618
        }
    }
}
